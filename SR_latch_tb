module SRFlipflop_tb;

	// Inputs
	reg S;
	reg R;
	

	// Outputs
	wire Q;
	wire Qn;

	// Instantiate the Unit Under Test (UUT)
	SRFlipFlop DUT (
		.S(S), 
		.R(R), 
		.Q(Q), 
		.Qn(Qn)
	);

initial begin
    // Initial state
    $display("Time\t S R | Q Qn");
    $monitor("%g\t %b %b | %b %b", $time, S, R, Q, Qn);
    
    // Set initial inputs
    S = 0; R = 0; #10; // No Set or Reset, output remains stable (undefined in real hardware but may simulate as 0)
    
    // Apply Set (S = 1, R = 0)
    S = 1; R = 0; #10;
    
    // Apply Reset (S = 0, R = 1)
    S = 0; R = 1; #10;
    
    // Apply both Set and Reset to 0 (should maintain previous state)
    S = 0; R = 0; #10;
    
    // Apply invalid condition (S = 1, R = 1), this is forbidden but can be tested for completeness
    S = 1; R = 1; #10;
    
    // Set inputs back to (S = 0, R = 0)
    S = 0; R = 0; #10;
    
    // Finish simulation
    $stop;
end

endmodule
